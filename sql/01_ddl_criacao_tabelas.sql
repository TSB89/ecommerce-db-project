-- 1. CLIENTE

CREATE TABLE cliente (
    id_cliente           INT GENERATED BY DEFAULT AS IDENTITY,
    nome                 VARCHAR(100) NOT NULL,
    email                VARCHAR(100) NOT NULL,
    senha_hash           VARCHAR(200) NOT NULL,
    telefone             VARCHAR(20),
    cpf                  VARCHAR(14) UNIQUE,
    data_cadastro        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pk_cliente PRIMARY KEY (id_cliente),
    CONSTRAINT uq_cliente_email UNIQUE (email)
);

-- 2. ENDERECO

CREATE TABLE endereco (
    id_endereco          INT GENERATED BY DEFAULT AS IDENTITY,
    id_cliente           INT NOT NULL,
    logradouro           VARCHAR(150) NOT NULL,
    numero               VARCHAR(10) NOT NULL,
    complemento          VARCHAR(50),
    bairro               VARCHAR(80),
    cidade               VARCHAR(80),
    uf                   CHAR(2) NOT NULL,
    cep                  CHAR(9) NOT NULL,
    tipo                 VARCHAR(20) CHECK (tipo IN ('entrega','cobranca')),
    principal            BOOLEAN DEFAULT FALSE,
    CONSTRAINT pk_endereco PRIMARY KEY (id_endereco),
    CONSTRAINT fk_endereco_cliente FOREIGN KEY (id_cliente)
        REFERENCES cliente (id_cliente)
        ON DELETE CASCADE
);

-- 3. PRODUTO

CREATE TABLE produto (
    id_produto           INT GENERATED BY DEFAULT AS IDENTITY,
    sku                  VARCHAR(30) NOT NULL,
    nome                 VARCHAR(120) NOT NULL,
    descricao            TEXT,
    preco_unitario       NUMERIC(10,2) NOT NULL CHECK (preco_unitario >= 0),
    peso                 NUMERIC(8,3),
    categoria            VARCHAR(60),
    ativo                BOOLEAN DEFAULT TRUE,
    CONSTRAINT pk_produto PRIMARY KEY (id_produto),
    CONSTRAINT uq_produto_sku UNIQUE (sku)
);

-- 4. ESTOQUE

CREATE TABLE estoque (
    id_estoque           INT GENERATED BY DEFAULT AS IDENTITY,
    id_produto           INT NOT NULL UNIQUE,
    quantidade_atual     INT NOT NULL DEFAULT 0 CHECK (quantidade_atual >= 0),
    quantidade_reservada INT NOT NULL DEFAULT 0 CHECK (quantidade_reservada >= 0),
    data_ultima_atualizacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pk_estoque PRIMARY KEY (id_estoque),
    CONSTRAINT fk_estoque_produto FOREIGN KEY (id_produto)
        REFERENCES produto (id_produto)
        ON DELETE CASCADE
);

-- 5. PEDIDO

CREATE TABLE pedido (
    id_pedido            INT GENERATED BY DEFAULT AS IDENTITY,
    id_cliente           INT NOT NULL,
    id_endereco_entrega  INT,
    id_endereco_cobranca INT,
    data_criacao         TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    valor_subtotal       NUMERIC(10,2) DEFAULT 0,
    valor_frete          NUMERIC(10,2) DEFAULT 0,
    valor_total          NUMERIC(10,2) DEFAULT 0,
    status               VARCHAR(20) DEFAULT 'carrinho'
        CHECK (status IN ('carrinho','confirmado','faturado','em_transporte','entregue','cancelado')),
    CONSTRAINT pk_pedido PRIMARY KEY (id_pedido),
    CONSTRAINT fk_pedido_cliente FOREIGN KEY (id_cliente)
        REFERENCES cliente (id_cliente),
    CONSTRAINT fk_pedido_endereco_entrega FOREIGN KEY (id_endereco_entrega)
        REFERENCES endereco (id_endereco),
    CONSTRAINT fk_pedido_endereco_cobranca FOREIGN KEY (id_endereco_cobranca)
        REFERENCES endereco (id_endereco)
);

-- 6. ITEM_PEDIDO

CREATE TABLE item_pedido (
    id_pedido            INT NOT NULL,
    id_produto           INT NOT NULL,
    quantidade           INT NOT NULL CHECK (quantidade > 0),
    preco_unitario       NUMERIC(10,2) NOT NULL CHECK (preco_unitario >= 0),
    desconto_item        NUMERIC(10,2) DEFAULT 0 CHECK (desconto_item >= 0),
    CONSTRAINT pk_item_pedido PRIMARY KEY (id_pedido, id_produto),
    CONSTRAINT fk_item_pedido_pedido FOREIGN KEY (id_pedido)
        REFERENCES pedido (id_pedido)
        ON DELETE CASCADE,
    CONSTRAINT fk_item_pedido_produto FOREIGN KEY (id_produto)
        REFERENCES produto (id_produto)
);

-- 7. PAGAMENTO

CREATE TABLE pagamento (
    id_pagamento         INT GENERATED BY DEFAULT AS IDENTITY,
    id_pedido            INT NOT NULL UNIQUE,
    metodo               VARCHAR(20) NOT NULL CHECK (metodo IN ('cartao','pix','boleto')),
    valor_pago           NUMERIC(10,2) NOT NULL CHECK (valor_pago >= 0),
    data_pagamento       TIMESTAMP,
    status               VARCHAR(20) DEFAULT 'pendente'
        CHECK (status IN ('pendente','aprovado','negado','estornado')),
    cod_transacao        VARCHAR(50),
    CONSTRAINT pk_pagamento PRIMARY KEY (id_pagamento),
    CONSTRAINT fk_pagamento_pedido FOREIGN KEY (id_pedido)
        REFERENCES pedido (id_pedido)
        ON DELETE CASCADE
);

-- 8. REMESSA

CREATE TABLE remessa (
    id_remessa           INT GENERATED BY DEFAULT AS IDENTITY,
    id_pedido            INT NOT NULL UNIQUE,
    transportadora       VARCHAR(80) NOT NULL,
    codigo_rastreio      VARCHAR(50) UNIQUE,
    data_envio           TIMESTAMP,
    data_entrega_prevista DATE,
    status               VARCHAR(20) DEFAULT 'preparando'
        CHECK (status IN ('preparando','postado','em_rota','entregue','falha_entrega')),
    CONSTRAINT pk_remessa PRIMARY KEY (id_remessa),
    CONSTRAINT fk_remessa_pedido FOREIGN KEY (id_pedido)
        REFERENCES pedido (id_pedido)
        ON DELETE CASCADE
);

-- 9. AUDITORIA_PEDIDO

CREATE TABLE auditoria_pedido (
    id_auditoria         INT GENERATED BY DEFAULT AS IDENTITY,
    id_pedido            INT NOT NULL,
    campo_alterado       VARCHAR(100),
    valor_anterior       VARCHAR(200),
    valor_novo           VARCHAR(200),
    usuario_responsavel  VARCHAR(100),
    data_alteracao       TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT pk_auditoria PRIMARY KEY (id_auditoria),
    CONSTRAINT fk_auditoria_pedido FOREIGN KEY (id_pedido)
        REFERENCES pedido (id_pedido)
        ON DELETE CASCADE
);
            